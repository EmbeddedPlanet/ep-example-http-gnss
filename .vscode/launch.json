{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Debug (J-Link) - EP_AGORA",
            "request": "launch",
            "type": "cortex-debug",
            "cwd": "${workspaceRoot}",
            "executable": "${workspaceRoot}/BUILD/EP_AGORA/GCC_ARM-DEBUG/ep-example-http-gnss.elf",
            "servertype": "jlink",
            "device": "nRF52840_xxAA",
            "interface": "swd"
        },
        {
            /* Starts debug session using the Cortex-Debug extension and pyOCD GDB server. Currently, this configuration doesn't work when the
            DAPLink device is passed through to a VM. */
            "name": "Debug (pyOCD) - EP_AGORA",
            "request": "launch",
            "type": "cortex-debug",
            "cwd": "${workspaceRoot}",
            "executable": "${workspaceRoot}/BUILD/EP_AGORA/GCC_ARM-DEBUG/ep-example-http-gnss.elf",
            "servertype": "pyocd",
            "device": "nRF52840_xxAA",
            "interface": "swd"
        },

        {
            "name": "Debug Mbed",
            "type": "cppdbg",
            "request": "launch",
            "program": "C:\\development\\loraRefAppSansBsp\\mbed-os-example-lorawan\\BUILD\\EP_AGORA\\GCC_ARM-DEBUG\\mbed-os-example-lorawan.elf",
            "args": [],
            "stopAtEntry": true,
            "cwd": "C:\\development\\loraRefAppSansBsp\\mbed-os-example-lorawan",
            "environment": [],
            "externalConsole": false,
            "debugServerArgs": "",
            "serverLaunchTimeout": 20000,
            "filterStderr": true,
            "filterStdout": false,
            "serverStarted": "GDB\\ server\\ started",
            "preLaunchTask": "Build Mbed OS application",
            "setupCommands": [
                {
                    "text": "-target-select remote localhost:3333",
                    "description": "connect to target",
                    "ignoreFailures": false
                },
                {
                    "text": "-file-exec-and-symbols C:\\development\\loraRefAppSansBsp\\mbed-os-example-lorawan\\BUILD\\EP_AGORA\\GCC_ARM-DEBUG\\mbed-os-example-lorawan.elf",
                    "description": "load file",
                    "ignoreFailures": false
                },
                {
                    "text": "-interpreter-exec console \"monitor reset\"",
                    "ignoreFailures": false
                },
                {
                    "text": "-interpreter-exec console \"monitor halt\"",
                    "ignoreFailures": false
                },
                {
                    "text": "-target-download",
                    "description": "flash target",
                    "ignoreFailures": false
                }
            ],
            "logging": {
                "moduleLoad": true,
                "trace": true,
                "engineLogging": true,
                "programOutput": true,
                "exceptions": true
            },
            "linux": {
                "MIMode": "gdb",
                "MIDebuggerPath": "C:\\Users\\farrenv\\workspace\\Software_Toolchain\\gcc-arm-none-eabi-6-2017-q2\\bin\\arm-none-eabi-gdb.exe",
                "debugServerPath": "C:\\Python27\\Scripts\\pyocd-gdbserver.EXE"
            },
            "osx": {
                "MIMode": "gdb",
                "MIDebuggerPath": "C:\\Users\\farrenv\\workspace\\Software_Toolchain\\gcc-arm-none-eabi-6-2017-q2\\bin\\arm-none-eabi-gdb.exe",
                "debugServerPath": "C:\\Python27\\Scripts\\pyocd-gdbserver.EXE"
            },
            "windows": {
                "MIMode": "gdb",
                "MIDebuggerPath": "C:\\Users\\farrenv\\workspace\\Software_Toolchain\\gcc-arm-none-eabi-6-2017-q2\\bin\\arm-none-eabi-gdb.exe",
                "debugServerPath": "C:\\Python27\\Scripts\\pyocd-gdbserver.EXE",
                "setupCommands": [
                    {
                        "text": "-environment-cd C:\\development\\loraRefAppSansBsp\\mbed-os-example-lorawan\\BUILD\\EP_AGORA\\GCC_ARM-DEBUG"
                    },
                    {
                        "text": "-target-select remote localhost:3333",
                        "description": "connect to target",
                        "ignoreFailures": false
                    },
                    {
                        "text": "-file-exec-and-symbols mbed-os-example-lorawan.elf",
                        "description": "load file",
                        "ignoreFailures": false
                    },
                    {
                        "text": "-interpreter-exec console \"monitor reset\"",
                        "ignoreFailures": false
                    },
                    {
                        "text": "-interpreter-exec console \"monitor halt\"",
                        "ignoreFailures": false
                    },
                    {
                        "text": "-target-download",
                        "description": "flash target",
                        "ignoreFailures": false
                    }
                ]
            }
        }
    ]
}